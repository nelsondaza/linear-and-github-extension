name: Create binary and release

concurrency:
  group: production
  cancel-in-progress: true

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      retention_days:
        description: 'Retention duration (in days)'
        required: true
        default: '1'
      node_version:
        description: 'NodeJS version'
        required: true
        default: '20.x'

jobs:
  release:
    permissions:
      contents: write
      discussions: write
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Set global variables
        shell: bash
        run: |
          echo "PNPM_STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV

      - name: Cache modules
        uses: actions/cache@v4
        with:
          path: ${{ env.PNPM_STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version || '20.x' }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Set release version
        run: |
          jq '.version="${{ env.RELEASE_VERSION }}"' package.json > /tmp/package.json
          mv /tmp/package.json package.json

      - name: Build dev extension
        run: |
          pnpm build --zip --tag=dev

      - name: Build prod extension
        run: |
          pnpm build
          pnpm package

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            build/chrome-mv3-dev.zip
            build/chrome-mv3-prod.zip

      - name: Upload built artifact
        uses: actions/upload-artifact@v4
        with:
          path: build/chrome-mv3-*.zip
          retention-days: ${{ inputs.retention_days }}

      - name: Publish to Chrome Web Store
        uses: mobilefirstllc/cws-publish@latest
        with:
          action: 'upload'
          client_id: ${{ secrets.CWS_CLIENT_ID }}
          client_secret: ${{ secrets.CWS_CLIENT_SECRET }}
          extension_id: ${{ secrets.CWS_EXTENSION_ID }}
          refresh_token: ${{ secrets.CWS_REFRESH_TOKEN }}
          zip_file: build/chrome-mv3-prod.zip
